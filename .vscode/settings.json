{
  "editor.formatOnSave": true,
  "files.insertFinalNewline": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.autoClosingBrackets": "always"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "settingsSync.ignoredExtensions": [
    "supabase.vscode-supabase-extension"
  ],
  "geminicodeassist.languages": [
    "typescript",
    "vue"
  ],
  "geminicodeassist.inlineSuggestions.enableAuto": false,
  "geminicodeassist.updateChannel": "Insiders",
  "geminicodeassist.codeGenerationPaneViewEnabled": true,
  "github.copilot.enable": {
    "vue 3": true,
    "typescript": true
  },
  "eslint.probe": [
    "javascript",
    "typescript",
    "vue",
    "json",
    "jsonc"
  ],
  "github.copilot.chat.codeGeneration.useInstructionFiles": false,
  "github.copilot.chat.followUps": "always",
  "github.copilot.chat.reviewSelection.instructions": [],
  "github.copilot.chat.edits.suggestRelatedFilesFromGitHistory": false,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "volar.formatting.enable": true,
  "volar.formatting.useWorkspaceDependencies": true,
  "volar.formatting.scriptInitialIndent": true,
  "volar.formatting.styleInitialIndent": true,
  "geminicodeassist.project": "caaegis",
  "git.openRepositoryInParentFolders": "never",
  "middlewareInstructions": {
    "summary": "The front-end communicates with the Skolabase middleware exclusively through defined APIs. The middleware handles all database operations (insert, update, fetch). Avoid accessing or modifying the Supabase database directly on the front end.",
    "usageRules": [
      {
        "api": "/first-buyers/{token}",
        "method": "GET",
        "description": "Fetches the first 100 buyers of a token. Ensure the token isn't already stored in the database before calling this endpoint.",
        "parameters": {
          "required": [
            "token"
          ],
          "optional": []
        },
        "exampleCall": "http://192.168.50.226:8082/first-buyers/0x123456"
      },
      {
        "api": "/tokens/latest",
        "method": "GET",
        "description": "Fetches the latest 100 tokens. Use the 'page' query parameter to paginate results.",
        "parameters": {
          "required": [],
          "optional": [
            "page"
          ]
        },
        "exampleCall": "http://192.168.50.226:8082/tokens/latest?page=1"
      },
      {
        "api": "/price/multi",
        "method": "GET",
        "description": "Fetches price and related data for multiple tokens in a single call.",
        "parameters": {
          "required": [
            "tokens"
          ],
          "optional": []
        },
        "exampleCall": "http://192.168.50.226:8082/price/multi?tokens=0x123456,0x789abc"
      },
      {
        "api": "/chart/{token}",
        "method": "GET",
        "description": "Retrieves OCLHV chart data for a token. Supports dynamic time intervals and date ranges.",
        "parameters": {
          "required": [
            "token"
          ],
          "optional": []
        }
      }
    ]
  },
  "cSpell.words": [
    "Composables",
    "Customizer",
    "Iconify",
    "nuxt",
    "ofetch",
    "stylelint",
    "vuetify"
  ],
  "commentAnchors.tags.anchors": {
    "‚ÑπÔ∏è": {
      "scope": "hidden",
      "highlightColor": "#3498DB",
      "styleComment": true,
      "isItalic": false
    },
    "üëâ": {
      "scope": "file",
      "highlightColor": "#98C379",
      "styleComment": true,
      "isItalic": false
    },
    "‚ùó": {
      "scope": "hidden",
      "highlightColor": "#FF2D00",
      "styleComment": true,
      "isItalic": false
    }
  },
  "highlight.regexFlags": "gi",
  "highlight.regexes": {
    "(100vh|translate|margin:|padding:|margin-left|margin-right|rotate|text-align|border-top|border-right|border-bottom|border-left|float|background-position|transform|width|height|top|left|bottom|right|float|clear|(p|m)(l|r)-|border-(start|end)-(start|end)-radius)": [
      {
        "borderWidth": "1px",
        "borderColor": "tomato",
        "borderStyle": "solid"
      }
    ],
    "(overflow-x:|overflow-y:)": [
      {
        "borderWidth": "1px",
        "borderColor": "green",
        "borderStyle": "solid"
      }
    ]
  }
}
